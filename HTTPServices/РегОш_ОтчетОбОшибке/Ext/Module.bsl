	
Функция GetInfo(Запрос)
	строкаОтвет = Запрос.ПолучитьТелоКакСтроку();
	
	ЧтениеJSON = Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(строкаОтвет);
	ТекОшибка = ПрочитатьJSON(ЧтениеJSON);
	ЧтениеJSON.Закрыть();
	
	АппСтэк = РегОш_НаСервере.ЗначениеСвойства(ТекОшибка, "appStackHash");
	Если АппСтэк <> Неопределено Тогда
		ХэшОшибки = ТекОшибка.configHash + "-" + ТекОшибка.clientStackHash + "-" + АппСтэк;
	КонецЕсли;

	ТекЗадача = РегОш_НаСервере.НайтиХэш(ХэшОшибки);
	Если ТекЗадача = Неопределено Тогда
		// Это первый вызов
		Если АппСтэк <> Неопределено Тогда
			НоваяЗапись = РегистрыСведений.РегОш_Ошибки.СоздатьМенеджерЗаписи();
			НоваяЗапись.Хэш =   ХэшОшибки;
			НоваяЗапись.Записать();
		КонецЕсли; 

		ДанныеОтвета = Новый Структура;
		ДанныеОтвета.Вставить("needSendReport", Истина); 
		ДанныеОтвета.Вставить("userMessage", "Отчет об обшибке получен. Мы исправим ошибку быстро как только сможем.");
		ДанныеОтвета.Вставить("dumpType", 1);
	ИначеЕсли ТекЗадача.Пустая() Тогда  
		// Ошибка зарегистрирована, но Задача еще не создана
		ДанныеОтвета = Новый Структура;
		ДанныеОтвета.Вставить("needSendReport", Ложь); 
		ДанныеОтвета.Вставить("userMessage", "Данная ошибка уже зарегистрирована и обрабатывается.");
		ДанныеОтвета.Вставить("dumpType", 0);
	Иначе 
		// Есть задача для ошибки
		ДанныеОтвета = Новый Структура;
		ДанныеОтвета.Вставить("needSendReport", Ложь); 
		ДанныеОтвета.Вставить("userMessage", "Данная ошибка уже зарегистрирована. Номер задачи #" + ТекЗадача.Код);
		ДанныеОтвета.Вставить("dumpType", 0);
	КонецЕсли; 
	
	ЗаписьJSON = Новый ЗаписьJSON;			
	ЗаписьJSON.УстановитьСтроку();
	ЗаписатьJSON(ЗаписьJSON, ДанныеОтвета);			

	ДанныеОтветаСтрокой = ЗаписьJSON.Закрыть();
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.УстановитьТелоИзСтроки(ДанныеОтветаСтрокой);
	
	Возврат Ответ;
КонецФункции

Функция PushReport(Запрос)

	ДанныеОтчета = Запрос.ПолучитьТелоКакДвоичныеДанные();
	
	//НоваяЗапись = РегистрыСведений.РегОш_Дамп.СоздатьМенеджерЗаписи();
	//НоваяЗапись.УИД =  Новый УникальныйИдентификатор;
	//НоваяЗапись.Дамп = Новый ХранилищеЗначения(ДанныеОтчета);
	//НоваяЗапись.Записать();
	
	//Запустить фоном обработку отчетов из регистра
	
	//ЗаданиеФон = РасширенияКонфигурации.ВыполнитьФоновоеЗаданиеСРасширениямиБазыДанных
	//			("РегОш_НаСервере.ВыбратьДампыОшибок()",
	//			, Новый УникальныйИдентификатор, 
	//			"Обработка файлов ошибок");	
	//УстановитьПривилегированныйРежим(Истина);
	//ЗаданиеФон = ФоновыеЗадания.Выполнить
	//			("РегОш_НаСервере.ВыбратьДампыОшибок()",
	//			, Новый УникальныйИдентификатор, 
	//			"Обработка файлов ошибок");	
	//УстановитьПривилегированныйРежим(Ложь);
	
	РегОш_НаСервере.ОбработатьДамп(ДанныеОтчета);
	
	Ответ = Новый HTTPСервисОтвет(200);
	Возврат Ответ;
КонецФункции

Функция Check(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки.Вставить("Content-Type","text/html; charset=utf-8");	
	Ответ.УстановитьТелоИзСтроки("Есть ответ");
	Возврат Ответ;
КонецФункции

